=========================
Project Task - the Wire
=========================

Срещаме проблеми при моториката (по-бавни реакции, непохватност и невъзможност за изпълнени е на определни дейности) почти всекидневно. Много професии днес изискват стабилна ръка. Например, архитекти, заварчици, зъболекари, хирурзи трябва да имат стабилна ръка за успеха на своите начинания. Двигателните проблеми са особено изразени, когато става дума за недоминантната ръка.

Проучванията посочват, че 96% от световната популация използва своята дясна ръка. Повечето от тези хора напълно неглижират лявата си ръка, съществува реална невъзможност за изпълнение на много дейности, които изискват прецизност.

Един от начините за преодоляване на този проблем е устройство, наречено „Жицата“, с което човек може да упржнява своята моторика, получавайки обратна връзка за своя прогрес в изпълнението на задачата си. С помощта на това устройство всеки може да работи върху своята концентрация и прецизни движения. В зависимост от обратната връзка, потребителят може да установи дали той/тя е дестатъчно сръчен/а или дали има проблеми с моториката и е нужно повече упражнение.

За конструирането на устройството ще са нужни:

•	4 Micro:bitа
•	Крокодилчета
•	Различни по големина жици
•	Дървена основа или стиропор
•	Колонка или слушалки
•	Щипка (кука)

За да направим устройството, първо ще трябва да направим устройство от жици, дърво и Micro:bit-и, на което да упражняваме моторните си движения.

.. image:: ../_images/_imageMicroBit/z4.jpg
      :align: center
      :width: 500px

**Свързване на Micro:bit-овете**

След като се запознахме с основните характеристики и компоненти на Micro:bit-овете, можем да продължим с конструкцията на устройството. Трябва да свържем Micro:bit-овете, използвайки крокодилски щипки на гореспоменатата конфигурация.
Ще свържем първия Micro:bit чрез заземяването (GND) към жицата, използвайки крокодилски щипки. Фигурата отдолу показва връзката между заземяването и Micro:bit-а (само за едно устройство).

.. image:: ../_images/_imageMicroBit/z3.jpg
      :align: center
      :width: 500px

Допълнително, ще трябва да свържем Micro:bit-а с частта от устройството, която тества двигателните умения (куката). 
Щом „Жицата“ е конструирана, време е да създадем програма за всеки Micro:bit.

.. image:: ../_images/_imageMicroBit/z5.jpg
      :align: center
      :width: 500px

**Програмиране**

Всике от четирите Micro:bit-а трябва да бъде програмирана индивидуално: 

1.Първият засича и брои направените от потребителя грешки.
2.Вторият дава начало на брояча на времето.
3.Третият го измерва.
4.Четвъртият издава сигнал, щом потребителят направи грешка.


**Стъпка 1**

Отидете на https://makecode.microbit.org/.

**Съпка 2**

Създайте нов проект. 
Искаме да програмираме засичане на грешки, по-точно, да засечем, използвайки Micro:bit, кога куката докосва главната жица. 
Базирайки се на физическото устройство, можем да заключим, че пинът ``P0`` дава начало на всички събития.

След като пинът ``P0`` е свързан чрез крокодилски щипки към куката, грешкатасе засича при докосване на основната жица и Micro:bit-ът трябва а покаже кръст (засичане на грешка).

**Стъпка 3**

От категория |Input| избираме блока |press| и от падащото меню избираме пина ``P0``.

.. |Input| image:: ../_images/_imageMicroBit/s6.png
.. |press| image:: ../_images/_imageMicroBit/3.png

Този блок ще задейства визуализирането на грешката.

**Стъпка 4**

Сега трябва да добавим блока, показващ кръста, на екрана. Той ще показва кога потребителят докосва основната жица с куката. 
Изберете категория |Basic| и блока |leds|.

.. |Basic| image:: ../_images/_imageMicroBit/s2.png
.. |leds| image:: ../_images/_imageMicroBit/s12.png

Кодът и симулаторът за грешки:

.. image:: ../_images/_imageMicroBit/4_5.png
      :align: center

В кода ще добавим блока за паузиране, с който ще осигурим своевременна системна реакция.
Изберете категорията |Basic| и блока |Pause| където можем да настроим отмерването на времето в милисекунди (1000 милисек. = 1 сек).

.. |Pause| image:: ../_images/_imageMicroBit/s39.png

Кодът изглежда така:

.. image:: ../_images/_imageMicroBit/7.png
      :align: center

**Стъпка 5**

Горната част на кода посочва само засичането на направената грешка от докосването на куката и жицата.

Сега ще добавим частта, която ще брои колко пъти потребителят ще сбърка. За да изпълним това изискване, трябва да намерим начин да съхраняваме, ако е нужно, да променяме този брой. Решението на този проблем е въвеждането на променлива.

Променливата може да бъде разбрана като пространство в компютърната памет, нещо като кутия, в което съхраняваме временни стойности по време на изпълнението на програмата. Променливите имат имена. Когато искаме да използваме стойността на променливата, достатъчно е да употребим нейното име.

Променлива се създава по следния начин: в категорията Variables (1) натискаме бутон Make a variable (2) и вписваме името на тази променлива в полето (3), в нашия случай-името на тона. Натискайки бутона ОК (4), създаваме променлива (5).

.. image:: ../_images/_imageMicroBit/s29.png
      :align: center

**Стъпка 6**

В началото на упражнението, числото на брояча ще бъде 0. Настройването на началната стойност ще се определя от потребителя чрез натискането на копчето А. Това означава, че когато той натисне бутона на Micro:bit-а броячът ще върне числото на 0 и отново можем да повторим упражнението.

От категорията |Input| изберете блока |Button|, и от падащото меню избираме бутона А.

.. |Button| image:: ../_images/_imageMicroBit/13.png

Този блок ще задейства нулирането на **брояча**.

От категорията ``Variables`` ще влачим блока  |set|.

Ще свържем този блок с горния  и с блока, представящ стойността на променливата. От категорията |Basic| избираме блока |prikaz| , в който завличаме блок |brojac| от категория ``Variables``, и ще го поставим на мястото с въведената 0. 
Така създаваме блок, който показва стойността на променливата **Брояч (Counter)**.

.. |set| image:: ../_images/_imageMicroBit/14.png
.. |prikaz| image:: ../_images/_imageMicroBit/15.png
.. |brojac| image:: ../_images/_imageMicroBit/16.png

Част от този код за нулиране и показване на променливата **Counter**:

.. image:: ../_images/_imageMicroBit/18.png
      :align: center

**Стъпка 7**

Можем да използваме променивата Counter, чиято начална стойност е 0, да брои грешките.стойността на тази променлива ще расте с 1 всеки път, щом потребителят сгреши, или всеки път щом куката докосне основната жица. 
За тази цел използваме блока |change| от категория ``Variables``.

Ще завлечем този блок в частта на кода, в която засичаме грешка и показваме знака Х.

.. |change| image:: ../_images/_imageMicroBit/19.png

В симулатора кодът изглежда така:

.. image:: ../_images/_imageMicroBit/202122.png
      :align: center

**Стъпка 8**

В тази стъпка ще обновим проекта, добавяйки звуков сигнал при грешка на потребителя. 

Ще направим връзката между два Micro:bit-а, за да използваме радио комуникацията между тях. Първо ще създадем ID група-пространството на комуникация между Micro:bit-овете. За да създадем ID група, трябва да влачим блока |radioset| от категория |Radio|.  Всяко число може да бъде избрано. Ние ще оставим 1 като IDна групата. Ще завлечем този блок в блока |Forever| от категория |Basic|.

.. |Radio| image:: ../_images/_imageMicroBit/s21.png
.. |radioset| image:: ../_images/_imageMicroBit/23.png
.. |Forever| image:: ../_images/_imageMicroBit/s2.png

Частта от кода, която създава групата за комуникация:

.. image:: ../_images/_imageMicroBit/24.png
      :align: center

За да изратим радио сигнал на друго устройство, което ще реагира спрямо този сигнал, издавайки звук при грешка, ще трябва да въведем блок в секцията на кода, която засича и брои грешки.

.. |radiosend| image:: ../_images/_imageMicroBit/25.png

Обновен, кодът изглежда така:

.. image:: ../_images/_imageMicroBit/26.png
      :align: center

Завършеният код за Micro:bit 1:

.. image:: ../_images/_imageMicroBit/27.png
      :align: center

Свалете файлът .hex на компютъра си, натискайки бутона |dugme1| или |dugme2|. Micro:bit-ът ще бъде готов да започне работа, щом завлачите файла в него.

.. |dugme1| image:: ../_images/_imageMicroBit/28.png
.. |dugme2| image:: ../_images/_imageMicroBit/29.png
            :width: 199px

**Стъпка 9**

Сега трябва да създадем програма за другия Micro:bit, който ще контролира звука при направена грешка от потребителя. 
Нашите Micro:bit-ове ще комуникират в ID група 1.

Ще завлечем блока |radioset| от категория |Radio| в блока |Forever| от категория |Basic|.

Тази част от кода за комуникационната група:

.. image:: ../_images/_imageMicroBit/24.png
      :align: center

Следващата стъпка е този Micro:bit да получава информация (в нашия случай- число), на която да се основава реакцията му-издаване на звук. За тази цел ще влачим блок от категорията |Radio| :

.. image:: ../_images/_imageMicroBit/30.png
      :align: center

В този блок ще завлечем блока  |Play|, който възпроизвежда звука от категорията |Music|.
От падащото меню на този блок ще изберем тона и продължителността му.

.. |Play| image:: ../_images/_imageMicroBit/31_.png
.. |Music| image:: ../_images/_imageMicroBit/s66.png

.. image:: ../_images/_imageMicroBit/3132.png
      :align: center

Този код ще изглежда така:

.. image:: ../_images/_imageMicroBit/33.png
      :align: center

**Забележка**: за възпроизводство на звука е нужно Micro:bit да бъде свързан с тонколоните/слушалките, както следва:

.. image:: ../_images/_imageMicroBit/34.png
      :align: center

Пълният код за Micro:bit-а, който има активиран звука:

.. image:: ../_images/_imageMicroBit/35.png
      :align: center

По този начин сме създали регистриране , броене и звукова сигнализация за направените от потребителя грешки.

**Стъпка 10**

За да създадем устройство, което ще измери колко време ще е нужно на потребителя да изпълни упражнението на своите двигателни умения, трябва да въведем още две Micro:bit устройства. Едното само ще задейства брояча, намиращ се на другото.

Натискайки бутона А, устройството се нулира и екранът се изчиства.  Опцията ``reset`` се намира в категория ``Advanced - Control``.

Опция за изчистване на екрана е субкатегорията ``More в категорията``  |Basic|.

Част от кода:

.. image:: ../_images/_imageMicroBit/37.png
      :align: center

Тогава създаваме пространство за комуникацията с ID група 50:

.. image:: ../_images/_imageMicroBit/36.png
      :align: center

``P1`` е пинът свързан с крокодилчетата.
Този пин ще се използва за задействане на брояча. Когато куката докосне жицата, изпраща радио сигнал, който стартира времето. За да види потребителят, че времето е започнало да тече, се появява знакът |slika| на екрана на Micro:bit-а.

.. |slika| image:: ../_images/_imageMicroBit/37_.png

Пълният код за Micro:bit, сигнализиращ за началото на броенето на време:

.. image:: ../_images/_imageMicroBit/39.png
      :align: center

**Стъпка 11**

Трябват ни две променливи:

-	Променливата **Време/ Time** , която ще измери времето от началото на упражнението чрез брояч, задействан от сигнал, получен от другия Micro:bit.

-	Променливата **Брояч/ Counter** , която може да приема две стойности- true и false, т.е. жицата е била или не е била докосната.


Натискането на бутона А нулира устройството и задава началната стойност на промеливите **Време/ Time** и **Брояч/ Counter**.
Стойности за променливата **Counter** можем да намерим в категорията |Logic|:

.. |Logic| image:: ../_images/_imageMicroBit/s4.png

.. image:: ../_images/_imageMicroBit/40.png
      :align: center

Следващата стъпка е да създадем пространство за комуникация с ID групата 50:

.. image:: ../_images/_imageMicroBit/36.png
      :align: center

Пинът ``P1`` е свързан с куката чраз крокодилски щипки. Той ще даде началото на отмерването на времето:

.. image:: ../_images/_imageMicroBit/41.png
      :align: center

Щом потребителят натисне бутона В, времето, което му отнема да изпълни "упражнението", ще се покаже:

.. image:: ../_images/_imageMicroBit/42.png
      :align: center

Когато Micro:bit-ът получи радио сигнала (числото) от другия Micro:bit, часовникът ще започне и стойността на променливата **Време** ще се сменя с 1 след всяка изминала секунда до края на упражнението:

.. image:: ../_images/_imageMicroBit/43.png
      :align: center

Крайният код за Micro:bit-а, който измерва времето от началото на "играта":

.. image:: ../_images/_imageMicroBit/43_.png
      :align: center

Когато прехвърлите всички кодове на своите Micro:bit-ове, ще сте готови да тествате свите двигателни умения и да проверите как ще се справите със задачата с по-слабата си ръка.
